DROP DATABASE IF EXISTS magus_notes;
CREATE DATABASE magus_notes;
use magus_notes;

CREATE TABLE usuarios (
    id INT PRIMARY KEY AUTO_INCREMENT,
    nombre VARCHAR(100) NOT NULL,
    apellido VARCHAR(100) NOT NULL,
    correo VARCHAR(200) NOT NULL,
    telefono VARCHAR(20) NULL,
     password VARCHAR(255) NOT NULL,
	created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);



CREATE TABLE notas (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    titulo VARCHAR(255) NOT NULL,
    frase VARCHAR(255) NULL,
    texto MEDIUMTEXT NOT NULL,
    id_usuario INT,
    publico BOOLEAN,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    CONSTRAINT nota_usuario_fk FOREIGN KEY (id_usuario) REFERENCES usuarios (id)
);

CREATE TABLE contacto (
    id INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    correo VARCHAR(150) NOT NULL,
    mensaje MEDIUMTEXT NOT NULL,
    id_usuario INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (id_usuario) REFERENCES usuarios (id)
);

ALTER TABLE notas
ADD COLUMN tipo VARCHAR(50) NOT NULL DEFAULT 'Notas RÃ¡pidas',
ADD COLUMN contenido_especifico JSON,
ADD COLUMN enlace_compartido VARCHAR(255),
ADD COLUMN codigo_qr TEXT;

CREATE TABLE archivos_nube (
    id INT PRIMARY KEY AUTO_INCREMENT,
    id_nota INT,
    url VARCHAR(255) NOT NULL,
    tipo_archivo VARCHAR(50) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (id_nota) REFERENCES notas(id)
);